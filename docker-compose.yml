version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: posgtresql-n8n
    volumes:
      - ~/postgres_data/open-companies-database:/var/lib/postgresql/data/
      - ./init-metabase.sql:/docker-entrypoint-initdb.d/init-metabase.sql
    environment:
      POSTGRES_DB: postgres-n8n-queue
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: n8n_postgresql.16893
    ports:
      - "35432:5432"  # Changed from 3000:5432 to avoid conflict

  web:
    build: .
    command: bash -c "poetry install && poetry run python manage.py migrate && poetry run python companies/sample_data/load_sample_data.py && poetry run python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8002:8000"   # Container listens on 8000, host port is 8002
    depends_on:
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=open_companies_database.settings_docker
      - PYTHONPATH=/code

  metabase:
    image: metabase/metabase
    ports:
      - "8003:3000"   # Metabase container listens on 3000, host port is 8003
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase_db
      MB_DB_PORT: 5432
      MB_DB_USER: postgres
      MB_DB_PASS: n8n_postgresql.16893
      MB_DB_HOST: db
      MB_DB_CONNECTION_URI: "postgres://postgres:n8n_postgresql.16893@db:5432/metabase_db"
      MB_PASSWORD_COMPLEXITY: "strong"
      MB_PASSWORD_LENGTH: 12
    depends_on:
      - db
    entrypoint: ["/bin/sh", "-c", "apk add --no-cache jq && /setup_metabase.sh & /app/run_metabase.sh"]
    volumes:
      - ./setup_metabase.sh:/setup_metabase.sh

  enrich_via_crustdata:
    build: .
    command: bash -c "poetry install && poetry run python -u fetch_crustdata.py --request_payload crustdata_request_payload.json > /proc/1/fd/1 2>/proc/1/fd/2"
    depends_on:
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=open_companies_database.settings_docker
      - PYTHONPATH=/code
    profiles:
      - enrich
